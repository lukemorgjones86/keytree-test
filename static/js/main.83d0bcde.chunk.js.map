{"version":3,"sources":["components/search.tsx","components/list.tsx","components/user.tsx","services/api.js","modules/SearchRepositories.tsx","App.tsx","serviceWorker.ts","index.tsx","modules/SearchRepos.module.scss"],"names":["SearchComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","value","validValue","handleChange","bind","assertThisInitialized","handleClick","event","setState","target","preventDefault","react_default","a","createElement","className","type","onChange","onClick","React","Component","List","title","items","map","item","i","key","name","User","user","login","public_repos","BASE_URL","getRepos","username","url","concat","axios","get","then","response","data","initialState","undefined","org","repos","searchType","SearchReposComponent","getUser","updateUser","getReposFromUser","toggleSearchType","string","_this2","updateRepos","_this3","_this4","all","_ref","_ref2","slicedToArray","orgs","styles","search_container","columns_2","search","user_details","components_user","list","App","SearchRepositories","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","error"],"mappings":"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","file":"static/js/main.83d0bcde.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDom from 'react-dom';\r\n\r\ntype Props = {\r\n    handleClick: any;\r\n}\r\ntype State = {\r\n    value: string;\r\n    validValue: boolean;\r\n}\r\ninterface EventTarget {\r\n    value: string\r\n}\r\n\r\nclass SearchComponent extends React.Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n\t    super(props)\r\n\t    this.state = {\r\n            value: '',\r\n            validValue: true\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleClick = this.handleClick.bind(this)\r\n    }\r\n    \r\n    handleChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n        this.setState({value: event.target.value});\r\n        \r\n        if (this.state.value !== '') {\r\n            this.setState({validValue: true})\r\n        }\r\n    }\r\n\r\n    handleClick(event: React.MouseEvent<HTMLInputElement>){\r\n        event.preventDefault();\r\n        \r\n        if (this.state.value !== '' ) {\r\n            this.props.handleClick(this.state.value)\r\n        }\r\n        else {\r\n            this.setState({validValue: false})\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return <form className=\"search-form\">\r\n            <input className=\"search_form primary_text_input\" type=\"text\" value={this.state.value} onChange={this.handleChange}></input>\r\n            <span className=\"search_form error\">{ this.state.validValue ? '':'please enter some text' }</span>\r\n            <input className=\"search_form primary_button\" type=\"submit\" onClick={this.handleClick}></input>\r\n        </form>\r\n    }\r\n}\r\n\r\nexport default SearchComponent","import React, { Children } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\ntype Props = {\r\n    items: any[];\r\n    title: string;\r\n}\r\n\r\nconst List: React.SFC<Props> = (props: Props) => (\r\n        <div>\r\n            <h3>{props.title}:</h3>\r\n            <ul>\r\n                { props.items.map((item:any, i:number) => <li key={i} className=\"item\">{item.name}</li> )}\r\n            </ul>\r\n        </div>\r\n)\r\n\r\nexport default List","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport {GithubUser} from './types';\r\n\r\ntype Props = {\r\n    user: GithubUser;\r\n    handleClick: any;\r\n}\r\n\r\nconst User: React.SFC<Props> = (props: Props) => (\r\n    <div className=\"user_detail_container\">\r\n        <h2>User Search Result: </h2>\r\n        <div className=\"user_search_result\">\r\n            user: <span className=\"user_detail_item\">{props.user.login}</span>\r\n            name: { props.user.name ? <span className=\"user_detail_item\">{props.user.name}</span> : <span className=\"user_detail_item\">n/a</span> }\r\n            number of Repos:<span className=\"user_detail_item\"> {props.user.public_repos}</span>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default User","import axios from \"axios\";\r\n\r\n// Documentation is at https://developer.github.com/v3/\r\nconst BASE_URL = \"https://api.github.com\";\r\n\r\nexport { getRepos, getUserData };\r\n\r\nfunction getRepos(username) {\r\n  const url = `${BASE_URL}/users/${username}/repos?per_page=250`;\r\n  return axios.get(url).then(response => response.data);\r\n}\r\n\r\nfunction getUserData(username) {\r\n  return axios\r\n    .all([\r\n      axios.get(`${BASE_URL}/users/${username}`),\r\n      axios.get(`${BASE_URL}/users/${username}/orgs`)\r\n    ])\r\n    .then(([user, orgs]) => ({\r\n      user: user.data,\r\n      orgs: orgs.data\r\n    }));\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport Search from '../components/search';\r\nimport List from '../components/list';\r\nimport User from '../components/user';\r\n\r\nimport styles from './SearchRepos.module.scss';\r\n\r\nimport { getRepos, getUserData } from '../services/api';\r\n\r\nimport { GithubUser } from '../components/types';\r\n\r\ntype Props = {\r\n}\r\n\r\ntype State = {\r\n    value: string;\r\n    user?: GithubUser;\r\n    org?: any;\r\n    repos?: any;\r\n    searchType?: string;\r\n}\r\n\r\nconst initialState = {\r\n    value: '',\r\n    user: undefined, \r\n    org: undefined,\r\n    repos: undefined,\r\n    searchType: 'user'\r\n}\r\n\r\nclass SearchReposComponent extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n\t    super(props)\r\n        this.state = initialState;\r\n\r\n        this.getUser = this.getUser.bind(this);\r\n        this.updateUser = this.updateUser.bind(this);\r\n        this.getReposFromUser = this.getReposFromUser.bind(this);\r\n        this.toggleSearchType = this.toggleSearchType.bind(this);\r\n    }\r\n\r\n    getRepos(string:string) {\r\n        getRepos(string)\r\n            .then(data => {\r\n                this.updateRepos(data)\r\n            })\r\n    }\r\n\r\n    getReposFromUser() {\r\n        if (this.state.user) {\r\n            getRepos(this.state.user.login)\r\n                .then(data => {\r\n                    this.updateRepos(data)\r\n                })\r\n            }\r\n    }\r\n\r\n    updateRepos(repos: any[]) {\r\n        this.setState({\r\n            repos: repos\r\n        })\r\n    }\r\n\r\n    getUser(string:string) {\r\n        this.setState(initialState);\r\n            \r\n        getUserData(string)\r\n            .then(data => {\r\n                this.updateUser(data)\r\n                this.getRepos(data.user.login)\r\n            })\r\n    }\r\n\r\n    updateUser(user: any) {\r\n        this.setState({\r\n            user: user.user,\r\n            org: user.org\r\n        })\r\n    }\r\n\r\n    toggleSearchType(type:string) {\r\n        this.setState({\r\n            searchType: type\r\n        })\r\n    }\r\n      \r\n    render () {\r\n        return <div className={styles.search_container}>\r\n            <div className={styles.columns_2}>\r\n            <div className=\"fixed_content\">\r\n                <h1>Search by user</h1>\r\n                <Search handleClick={this.getUser } /> \r\n            </div>\r\n            </div>\r\n            <div className={styles.columns_2}>\r\n                <div className={styles.user_details}>\r\n                 { this.state.user ? <User user={this.state.user} handleClick={this.getReposFromUser} /> : null}\r\n                </div>\r\n                { this.state.repos ? <List items={this.state.repos} title=\"User repos\" />: null}\r\n            </div> \r\n        </div>\r\n    }\r\n}\r\n\r\nexport default SearchReposComponent","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport './styles/styles.scss';\n\nimport SearchReposComponent from './modules/SearchRepositories';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <SearchReposComponent />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"SearchRepos_error__2l7_1\",\"columns_2\":\"SearchRepos_columns_2__1uMOF\",\"search_container\":\"SearchRepos_search_container__2qutc\"};"],"sourceRoot":""}